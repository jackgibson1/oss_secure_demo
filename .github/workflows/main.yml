name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  attestations: write
  packages: write

env:
  REGISTRY: docker.cloudsmith.io
  IMAGE_NAME: jack-test-org/jack-test-repo/flask_app # OSS_DEMO_INPUTS: Update to {org_name}/{repo_name}/flask_app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step to checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step to install cosign
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0

      # Step to authenticate with Cloudsmith Docker Registry
      - name: Authenticate with Cloudsmith Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.CLOUDSMITH_USER_NAME }}
          password: ${{ secrets.CLOUDSMITH_API_KEY }}

      # Step to build and push the Docker image to Cloudsmith
      - name: Build and push image
        id: push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            CLOUDSMITH_ENTITLEMENT_TOKEN=${{ secrets.CLOUDSMITH_ENTITLEMENT_TOKEN }}

      # Step to get the image digest
      - name: Get image digest
        id: get-digest
        run: |
          echo "IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest)" >> $GITHUB_ENV

      # Step to generate the SBOM (Software Bill of Materials)
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        id: sbom
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          format: spdx-json
          output-file: 'sbom.spdx.json'

      # Step to publish the SBOM as an attestation
      - name: Publish SBOM
        run: cosign attest --yes --predicate sbom.spdx.json ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # Step to sign the Docker image with GitHub OIDC Token
      - name: Sign the images with GitHub OIDC Token
        run: cosign sign --yes ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # Step to verify the signed image
      #- name: Verify image
      #  run: cosign verify --certificate-identity "https://github.com/ciaracarey/oss_secure_demo/.github/workflows/main.yml@refs/heads/main" --certificate-oidc-issuer https://token.actions.githubusercontent.com ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
